#+TITLE: Notes on Conformal Solitons for the Mean Curvature Flow
#+AUTHOR: Paul Bryan
#+SETUPFILE: ~/.emacs.d/org-templates/bibliography.org
#+OPTIONS: toc:nil

# ***  Class
#+LATEX_CLASS: amsart

# *** Macros
#+LATEX_HEADER: \input{local_definitions}

# *** For bundling
#+LATEX_HEADER: \usepackage{snapshot}

# *** Author
#+LATEX_HEADER: \email{pabryan@gmail.com}

# *** Metadata
#+LaTeX_HEADER: \keywords{Mean Curvature Flow, Solitons, Conformal Geometry}
#+LATEX_HEADER: \subjclass[2010]{}

# *** Other formatting settings
#+LATEX_HEADER: \date{}


* Introduction

Let \(\oneparamimmersions: \submanifold \to \ambientspace\) be a smooth, one parameter family of immersions, and write \(\oneparamsubmanifold = \oneparamimmersions(\submanifold)\). Also let \(\velocityvector = \pd{t} \oneparamimmersions = \pushforward{\oneparamimmersions} \partial_t\) denote the velocity vector.

#+BEGIN_defn
We say \(\oneparamsubmanifold\) evolves by the Mean Curvature Flow if there exists a one-parameter family of diffeomorphisms \(\oneparamdiffeo: \submanifold \to \submanifold\) and a change of time parameter \(\timeparam = \timeparam(\changedtime)\) such that
\[
\changedoneparamimmersions (x) = \oneparamimmersions[\changedtime] (\oneparamdiffeo[\timeparam(\changedtime)](x))
\]
satisfies
\[
\changed{\velocityvector} = \pd{\changedtime} \changedoneparamimmersions = - \changed{\meancurv} \changed{\nor}.
\]
Equivalently, 
\[
\ip{\velocityvector}{\nor} = - \timefactor(\timeparam) \meancurv.
\]
We will call \(\changedoneparamimmersions\) the Mean Curvature Flow parametrisation.
#+END_defn

Similarly, given a vector field \(\ambientvectorfield\) on \(\ambientspace\), we may define a \(\ambientvectorfield\)-soliton.

#+BEGIN_defn
A \(\ambientvectorfield\)-soliton is a one parameter family of immersed sub-manifolds \(\oneparamsubmanifold\), such that there exists a one-parameter family of diffeomorphisms \(\oneparamdiffeo: \submanifold \to \submanifold\) and a change of time parameter \(\timeparam = \timeparam(\changedtime)\) such that
\[
\changedoneparamimmersions (x) = \oneparamimmersions[\changedtime] (\oneparamdiffeo[\timeparam(\changedtime)](x))
\]
satisfies
\[
\changed{\velocityvector} = \ambientvectorfield(\changedoneparamimmersions).
\]
Writing \(\flow\) for the flow of \(\ambientvectorfield\) (\(\pd{\timeparam} \flow = \ambientvectorfield(\flow)\)) we have
\[
\changedoneparamimmersions (x) = \flow (\initialimmersion(x)).
\]
Equivalently, 
\[
\ip{\velocityvector}{\nor} = \timefactor(\timeparam) \ambientvectorfield.
\]
We will call \(\changedoneparamimmersions\) the $\ambientvectorfield$-soliton parametrisation.
#+END_defn

In both definitions, we note that we are interested in geometric flows - namely those dependent on the image $M_t$, independent of any chosen parametrisation. Thus only the normal speed is relevant and accounts for the one-parameter family of diffeomorphisms which is just a reparametrisation at each time and only adds a tangential component to the speed. The change of time parameter, corresponding to the factor \(\timefactor\) is there to allow us to define a Mean Curvature Flow Soliton (MCF-soliton) as a one parameter family of immersed sub-manifolds that is simultaneously a solution of the Mean Curvature Flow and a \(\ambientvectorfield\)-soliton as defined above.

#+BEGIN_defn
An MCF-soliton has a Mean Curvature Flow parametrisation satisfying
\begin{equation}
\label{eq:mcf-soliton}
\ip{\ambientvectorfield}{\nor} = -\timefactor(\timeparam) \meancurv
\end{equation}
for some function \(\timefactor: \RR \to \RR\).
#+END_defn
The definition says that \(\oneparamsubmanifold\) is a solution of the Mean Curvature Flow, while simultaneously moving along the integral curves of \(\ambientvectorfield\) (with not necessarily unit-speed, though at each fixed time, the speed is constant over \(\oneparamsubmanifold\)). Equivalently if \(\oneparamsubmanifold\) moves along the integral curves of \(\ambientvectorfield\), i.e. \(\oneparamimmersions(x) = \flow (\initialimmersion(x))\) for \(\flow\) the flow of \(\ambientvectorfield\), and satisfies equation \eqref{eq:mcf-soliton}, then \(\oneparamsubmanifold\) is an MCF-soliton.

To go back and forth between the MCF-parametrisation and the \(\ambientvectorfield\)-parametrisation, suppose we have an MCF-parametrisation satisfying \eqref{eq:mcf-soliton}. Then we solve \(\pd[\timeparam]{\changedtime} = c (\timeparam(\changedtime))\) for \(\timeparam(\changedtime)\) and \(d\oneparamimmersions \cdot \partial_{\changedtime} \oneparamdiffeo[\changedtime] = \tangpart{\ambientvectorfield}\) for \(\oneparamdiffeo[\changedtime]\) where \(\tangpart{\ambientvectorfield}\) denotes the tangential component of \(\ambientvectorfield\). Defining \(\changedoneparamimmersions(x) = \oneparamimmersions(\oneparamdiffeo[\changedtime](x))\) yields
#+BEGIN_latex
\[
\begin{split}
\changed{\velocityvector} &= \partial_{\changedtime} \timeparam \velocityvector + d\oneparamimmersions \cdot \partial_{\changedtime} \oneparamdiffeo[\changedtime] \\
&= c \velocityvector + \tangpart{\ambientvectorfield} \\
&= \ip{\ambientvectorfield}{\nor} \nor + \tangpart{\ambientvectorfield} = \ambientvectorfield
\end{split}
\]
#+END_latex
since \(\velocityvector = - H\nor\) and \(\ip{\ambientvectorfield}{\nor} = -c \meancurv\). Thus \(\changedoneparamimmersions(x)\) is an \(\ambientvectorfield\)-parametrisation.

Going from an \(\ambientvectorfield\)-parametrisation to an MCF-parametrisation follows a similar procedure except this time we solve \(\partial_{\changedtime} \timeparam = \timefactor^{-1} (\timeparam(\changedtime))\) and \(d\oneparamimmersions \cdot \partial_{\timeparam} \oneparamdiffeo = - \tangpart{\ambientvectorfield}\) to find that \(\changedoneparamimmersions(x) = \oneparamimmersions(\oneparamdiffeo(x))\) is an MCF-parametrisation.

A natural question to ask is whether MCF-solitons exist for a given \(\ambientvectorfield\). A necessary condition is that \(M_0\) satisfies,
\begin{equation}
\label{eq:initial_mcf-soliton}
\ip{\ambientvectorfield(\initialimmersion)}{\initial{\nor}} = -\initial{\timefactor} \initial{\meancurv}.
\end{equation}
For such \(M_0\), the MCF is uniquely determined, and so we must ask if this flow is also an \(\ambientvectorfield\)-soliton. In general the answer is no since a MCF-soliton simultaneously satisfies two differential equations, which is an over-determined system. Thus we need some /integrability condition/. We will discuss some possibilities below.

Sometimes it will be more convenient to use one or the other parametrisation and we will be sure to state clearly which parametrisation we are working with.

* Notation and Preliminaries

** Change in Geometry of a Conformal Transformation

Let \(\ambient\) be a Riemannian manifold with Levi-Civita connection \(\ambientconx\), and let \(\conformalmap: \ambientspace \to \ambientspace\) a conformal diffeomorphism with
\[
\ambientconformalmetric = \pullback{\conformalmap} \ambientmetric = \conformalfactor \ambientmetric.
\]
We want to compare the geometry of \(\ambient\) with \((\conformalmap(\ambientspace), \ambientmetric)\). To this end we need to identify \(x\) with \(\conformalmap(x)\) which we achieve by comparing \(\ambient\) with \((\ambientspace, \ambientconformalmetric)\) at \(x\) since \(\conformalmap: (\ambientspace, \ambientconformalmetric) \to \ambient\) is an isometry.

The dual conformal metric is
\[
\dualambientconformalmetric = \dualconformalfactor \dualambientmetric.
\]
The conformal Levi-Civita connection is
\[
\ambientconformalconx_X Y = \ambientconx_X Y + X(\conformalexponent) Y + Y(\conformalexponent) X - \ambientmetric(X, Y) \grad \conformalexponent
\]
where the gradient is taken with respect to the original metric \(\ambientmetric\).

Now let \(\submanifold \subset \ambientspace\) be an submanifold. We want to compare the geometry of \(\submanifold\) with \(\conformalmap(\submanifold)\). To this, we work instead with \(\submanifold\) using the metric \(\ambientconformalmetric\) since the isometry \(\conformalmap: (\ambientspace, \ambientconformalmetric) \to \ambient\) obviously takes \(\submanifold\) isometrically to \(\conformalmap(\submanifold)\). Let \(\metric\) be the metric on \(\submanifold\) induced by \(\ambientmetric\) with Levi-Civita connection \(\conx\) and let \(\conformalmetric\) be the metric induced by \(\ambientconformalmetric\) with Levi-Civita connection \(\conformalconx\). 

Then we have
\[
\conformalmetric = \conformalfactor \metric, \quad \dualconformalmetric = \dualconformalfactor \dualmetric.
\]

For the connection, let \(X,Y\) be tangent to \(M\) and then taking the tangential component of \(\ambientconformalconx_X Y\) gives,
\[
\conformalconx_X Y = \conx_X Y + X(\conformalexponent) Y + Y(\conformalexponent) X - \metric(X, Y) \grad \conformalexponent
\]
where the gradient is now the gradient on \(M\), taken with respect to \(\metric\).

Letting \(\nor\) be the unit normal vector to \(M\) with respect to \(\ambientmetric\), we see that for any vector \(X\) tangent to \(M\),
\[
\ambientconformalmetric (\nor, X) = \conformalfactor \ambientmetric(\nor, X) = 0
\]
so that \(\nor\) is normal to \(M\) with respect to \(\ambientconformalmetric\). It's length however is now \(\sqrtconformalfactor\) so that
the conformal unit normal is
\begin{equation}
\label{eq:conformalnor}
\conformalnor = \dualsqrtconformalfactor \nor.
\end{equation}
This allows us to calculate the second fundamental form,
\begin{align}
\label{eq:conformalsff}
\conformalsff (X, Y) &= \ambientconformalmetric(\conformalconx_X Y, \conformalnor) = \conformalfactor \ambientmetric (\ambientconx_X Y + X(\conformalexponent) Y + Y(\conformalexponent) X - \ambientmetric(X, Y) \grad \conformalexponent, \dualsqrtconformalfactor \nor) \\
&= \sqrtconformalfactor \ambientmetric (\ambientconx_X Y, \nor) - \sqrtconformalfactor \ambientmetric(X, Y) \ambientmetric (\grad \conformalexponent, \nor) \\
&= \sqrtconformalfactor \sff (X, Y) - \sqrtconformalfactor \ambientmetric (X, Y) d\conformalexponent \cdot \nor.
\end{align}

Taking the trace with respect to \(\dualmetric\) gives the conformal mean curvature,
\begin{equation}
\label{eq:conformalmeancurv}
\conformalmeancurv = \dualsqrtconformalfactor \meancurv - \dualsqrtconformalfactor d\conformalexponent \cdot \nor = \dualsqrtconformalfactor \meancurv + d\conformalexponent \cdot \conformalnor.
\end{equation}

** Conformal Killing Fields

#+BEGIN_defn
The vector field, \(\ambientvectorfield\) is said to be a /conformal Killing field/ if
\[
\lie_{\ambientvectorfield} \ambientmetric = \conformalkillingfactor \ambientmetric
\]
for some smooth function \(\conformalkillingfactor \in C^{\infty} (\ambientspace)\). If \(\conformalkillingfactor \equiv 0\), then \(\ambientvectorfield\) is a /Killing field/.
#+END_defn

#+BEGIN_prop
The vector field, \(\ambientvectorfield\) is conformal Killing field if and only if it's flow is a one parameter-subgroup of conformal diffeomorphisms. If \(\ambientvectorfield\) is a Killing field, then it's flow is by isometries.
#+END_prop

#+BEGIN_proof
Let \(\flow\) denote the flow of \(\ambientvectorfield\).

Suppose \(\ambientvectorfield\) is conformal Killing.
#+END_proof

#+BEGIN_prop
Let \(\ambientvectorfield\) be a conformal Killing field with \(\lie_{\ambientvectorfield} \ambientmetric = \conformalkillingfactor \ambientmetric\). Then \(\ambientvectorfield\) has constant length if and only if
\[
\conx_{\ambientvectorfield} \ambientvectorfield = \conformalkillingfactor \ambientvectorfield.
\]
In particular, for Killing fields, \(\ambientvectorfield\) has constant length if and only if the flow of \(\ambientvectorfield\) is by geodesics.
#+END_prop

#+BEGIN_proof
For any two vector fields, \(Y, Z\) we have
\[
\conformalkillingfactor \ambientmetric (Y, Z) = \left(\lie_{\ambientvectorfield} \ambientmetric\right) (Y, Z) = \ambientmetric(\nabla_Y \ambientvectorfield, Z) + \ambientmetric(Y, \nabla_Z \ambientvectorfield).
\]
In particular, taking \(Y = \ambientvectorfield\) we find that
\[
\conformalkillingfactor \ambientmetric (\ambientvectorfield, Z) = \ambientmetric(\nabla_{\ambientvectorfield} \ambientvectorfield, Z) + \ambientmetric(\ambientvectorfield, \nabla_Z \ambientvectorfield) = \ambientmetric(\nabla_{\ambientvectorfield} \ambientvectorfield, Z) + \frac{1}{2} \nabla_Z \ambientmetric(\ambientvectorfield, \ambientvectorfield).
\]
Therefore, \(\ambientvectorfield\) has constant length if and only if, for every vector field \(Z\),
\[
\ambientmetric(\conformalkillingfactor\ambientvectorfield, Z) = \ambientmetric(\nabla_{\ambientvectorfield} \ambientvectorfield, Z).
\]
Since \(\ambientmetric\) is non-degenerate, and this is true for every \(Z\) we must have
\[
\nabla_{\ambientvectorfield} \ambientvectorfield = \conformalkillingfactor\ambientvectorfield
\]
as claimed. In particular, if \(\ambientvectorfield\) is Killing, \(\nabla_{\ambientvectorfield} \ambientvectorfield = 0\) and hence the integral curves of \(\ambientvectorfield\) are geodesics.
#+END_proof


* Conformal Solitons

#+BEGIN_latex
\renewcommand{\conformalexponent}{\mathop{\phi_{\timeparam}}}
#+END_latex

Let us begin by answering the question of whether a initial submanifold \(\initialsubmanifold\) satisfying the initial MCF-soliton equation \eqref{eq:initial_mcf-soliton} gives rise to an MCF-soliton in the particular case that \(\flow\) is a one-parameter subgroup of conformal diffeomorphisms, or equivalently that \(\ambientvectorfield\) is a conformal Killing field,
\[
\lie_{\ambientvectorfield} \ambientmetric = \conformalkillingfactor \ambientmetric.
\]
We find it most convenient to work with the \(\ambientvectorfield\)-parametrisation, and to this end, let \(\oneparamimmersions (x) = \flow (\initialimmersion(x))\). Then \(\initialsubmanifold\) is the initial submanifold of a MCF-soliton if and only if \eqref{eq:mcf-soliton} holds, which the reader will recall states that
\[
\ip{\ambientvectorfield}{\nor} = -\timefactor(\timeparam) \meancurv.
\]

Pulling back by the conformal diffeomorphism, \(\flow\), equivalently we need to show that
\[
\conformalfactor \ip{\ambientvectorfield_{\timeparam}}{\conformal{\nor}_{\timeparam}} = -\timefactor(t) \conformal{\meancurv}_{\timeparam}
\]
where \(\ambientvectorfield_{\timeparam} = \pushforward{\flow}^{-1} \ambientvectorfield\) and from equations \eqref{eq:conformalnor} and \eqref{eq:conformalmeancurv} we have
\[
\conformal{\meancurv}_{\timeparam} = \dualsqrtconformalfactor \initial{\meancurv} - \dualsqrtconformalfactor d\conformalexponent \cdot \initial{\nor}, \quad \conformal{\nor}_{\timeparam} = \dualsqrtconformalfactor \initial{\nor}.
\]

Thus we may rewrite equation \eqref{eq:mcf-soliton} as
\begin{equation}
\label{eq:conformal-mcf-soliton}
\conformalfactor \ip{\ambientvectorfield_{\timeparam}}{\initial{\nor}} = - \timefactor(t) \initial{\meancurv} + \timefactor(t) d\conformalexponent \cdot \initial{\nor},
\end{equation}
which we refer to as the /conformal-mcf-soliton equation/.

#+BEGIN_eg
Let \(\ambient = (\RR^{n+1}, \ip{\cdot}{\cdot})\) be Euclidean space with the standard metric and \(\ambientvectorfield(y) = -y\) be the (inward pointing) position vector field. This is the conformal vector field corresponding to homothetic contraction with \(\flow(y) = e^{-\timeparam} y\). The differential \(d\flow \cdot Z = e^{-t} Z\) and so \(\pullback{\flow} \ip{\cdot}{\cdot} = e^{-2\timeparam} \ip{\cdot}{\cdot}\). Thus our \(\ambientvectorfield\)-parametrisation is
\[
\oneparamimmersions (x) = e^{-t} \initialimmersion(x).
\]
The exponent \(\conformalexponent = -\timeparam\) is independent of \(y \in \RR^{n+1}\) so that \(d\conformalexponent \cdot \initial{\nor} = 0\). Applying \(d\flow\) to \(\ambientvectorfield\) gives \((d\flow \cdot \ambientvectorfield)|_x = e^{-t} \ambientvectorfield(x) = \ambientvectorfield(\flow(x))\). In other words, \(\ambientvectorfield_{\timeparam}(y) = \ambientvectorfield(y) = -y\). Therefore, the conformal-mcf-soliton equation \eqref{eq:conformal-mcf-soliton} with initial condition \(\initialimmersion\) is
#+BEGIN_latex
\[
\begin{cases}
e^{-2\timeparam} \ip{\initialimmersion(x)}{\initial{\nor}} &= \timefactor(t) \initial{\meancurv}, \\
\ip{\initialimmersion}{\initial{\nor}} &= \initial{\timefactor} \initial{\meancurv}.
\end{cases}
\]
#+END_latex
The unique solution of this problem is easily obtained defining \(\timefactor(\timeparam) = \initial{\timefactor} e^{-2\timeparam}\) to obtain an MCF-soliton for any initial \(\initialimmersion\) satisfying \(\ip{\initialimmersion}{\initial{\nor}} = \initial{\timefactor} \initial{\meancurv}\) with \(\initial{\timefactor}\) an arbitrary constant. The MCF-parametrisation is obtained first by solving
#+BEGIN_latex
\begin{align*}
\partial_{\changedtime} \timeparam &= \exp (-2\timeparam(\changedtime)) \\
d\oneparamimmersions \cdot \partial_{\timeparam} \oneparamdiffeo &= - \tangpart{\oneparamimmersions}.
\end{align*}
#+END_latex
Then
\[
\changedoneparamimmersions(x) = \oneparamimmersions[\tfrac{1}{2} \ln 2 \tau](\oneparamdiffeo[\tfrac{1}{2} \ln 2 \tau](x))) = \frac{1}{\sqrt{2\changedtime}} \initialimmersion(\oneparamdiffeo[\tfrac{1}{2} \ln 2 \tau](x))
\]
is an MCF-parametrisation where \(\oneparamdiffeo\) solves
\[
\partial_t \oneparamdiffeo = - d\oneparamimmersions^{-1} \cdot \tangpart{\oneparamimmersions}.
\]
#+END_eg

#+BEGIN_eg
Again, let \(\ambient = (\RR^{n+1}, \ip{\cdot}{\cdot})\) be Euclidean space with the standard metric and this time choose \(\ambientvectorfield = \ambientvectorfield_0\) be a fixed vector. Then the flow of \(\ambientvectorfield\) is \(\flow(y) = y + \timeparam\ambientvectorfield_0\) with \(\pullback{\flow} \ip{\cdot}{\cdot} = \ip{\cdot}{\cdot}\). That is, the exponent, \(\conformalexponent = 0\) and \(\ambientvectorfield\) is of course a Killing field. Our \(\ambientvectorfield\)-parametrisation is
\[
\oneparamimmersions (x) = \initialimmersion(x) + \timeparam\ambientvectorfield_0
\]
for a given initial immersion \(\initialimmersion\).

Again we have \(d\conformalexponent = 0\) and \(\ambientvectorfield_{\timeparam} = \ambientvectorfield_0\). The conformal-mcf-soliton equation \eqref{eq:conformal-mcf-soliton} with initial condition \(\initialimmersion\) becomes
#+BEGIN_latex
\[
\begin{cases}
\ip{\ambientvectorfield_0}{\initial{\nor}} &= \timefactor(t) \initial{\meancurv}, \\
\ip{\ambientvectorfield_0}{\initial{\nor}} &= \initial{\timefactor} \initial{\meancurv}.
\end{cases}
\]
#+END_latex
This time the factor \(\timefactor(t) = \initial{\timefactor}\) is constant and the \(\ambientvectorfield\) MCF-solitons are precisely those immersions given in the \(\ambientvectorfield\)-parametrisation as
\[
\oneparamimmersions(x) = \initialimmersion(x) + \timeparam\ambientvectorfield_0
\]
where \(\initialimmersion\) satisfies
\[
\ip{\ambientvectorfield_0}{\initial{\nor}} = \initial{\timefactor} \initial{\meancurv}
\]
for some \(\initial{\timefactor}\).

The MCF-parametrisation is obtained first by solving
#+BEGIN_latex
\begin{align*}
\partial_{\changedtime} \timeparam &= \frac{1}{\initial{\timefactor}} \\
d\oneparamimmersions \cdot \partial_{\timeparam} \oneparamdiffeo &= - \tangpart{\oneparamimmersions}.
\end{align*}
#+END_latex
Then
\[
\changedoneparamimmersions(x) = \oneparamimmersions[\tfrac{\changedtime}{\initial{\timefactor}}](\oneparamdiffeo[\tfrac{\changedtime}{\initial{\timefactor}}](x))) = \initialimmersion(\oneparamdiffeo[\tfrac{\changedtime}{\initial{\timefactor}}](x)) + \tfrac{\changedtime}{\initial{\timefactor}} \ambientvectorfield_0
\]
is an MCF-parametrisation where \(\oneparamdiffeo\) solves
\[
\partial_t \oneparamdiffeo = - d\oneparamimmersions^{-1} \cdot \tangpart{\ambientvectorfield_0}.
\]
#+END_eg

* Notes 							   :noexport:
** Comments from Ben
1. Is $n_\delta$ the choice with negative $z$-component?
2. Make more rigorous what is meant by $z$-coord. of $\alpha$ is $\geq z$-coord. of $\beta$. E.g., what points on alpha correspond to what points on beta? One way might be to take the intersection of S^2, P, and span{n,(0,0,1)} as the north and south poles and use the great circles passing through them in S^2_+.
3. Lemma 0.2: $\gamma_+ \geq R(\gamma_-)$ (abbreviated)?
4. Define $\alpha > \beta$ to be strictly greater in the interior of S^2_+ and at the boundary (assume equal there) the angle is positive.
5. Conclusion of Lemma 0.3 is > instead of geq.

